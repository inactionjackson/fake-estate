{"version":3,"sources":["components/layout/AutoCompleteBox.js","components/layout/CitySearchBox.js","components/layout/Header.js","components/pages/Home.js","components/Formatters.js","components/layout/ResultThumbnail.js","components/layout/ResultGrid.js","components/layout/MapDisplay.js","components/layout/NumberDropdown.js","components/layout/ButtonWithDropdown.js","components/layout/SearchHeader.js","components/layout/DetailsModul.js","components/pages/MapSearch.js","SearchModel.js","App.js","serviceWorker.js","index.js"],"names":["AutoCompleteBox","_ref","suggestions","clickHandler","react_default","a","createElement","className","map","suggestion","index","key","onClick","city","state","CitySearchBox","_useState","useState","_useState2","Object","slicedToArray","setSuggestions","_useState3","_useState4","selectedCity","setSelectedCity","_useState5","_useState6","searchTerm","setSearchTerm","_useState7","_useState8","cityList","setCityList","g_setToMapSearch","useStoreActions","actions","setToMapSearch","g_selectedCity","useStoreState","g_SetSelectedCity","formatCityObj","obj","useEffect","source","Axios","CancelToken","get","cancelToken","token","then","res","data","catch","error","console","log","cancel","findCityByTerm","term","termLen","toUpperCase","length","firstL","filter","entry","substring","inputRef","React","createRef","focusHandler","current","select","listenForSubmit","e","bestMatch","matchingCities","alert","Fragment","style","display","position","type","size","name","placeholder","onChange","target","value","match","onKeyPress","onFocus","ref","selection","focus","NAME_STYLE","color","Header","bShowSearch","setbShowSearch","react_router_dom","to","Home","g_toMapSearch","toMapSearch","g_resetSelectedCity","resetSelectedCity","react_router","Formatters","classCallCheck","this","ResultThumbnail","listing","id","g_setSelectedHouseId","setSelectedHouseId","g_selectedHouseId","selectedHouseId","bSelected","setbSelected","setListingBeingViewed","offsetTop","onMouseOver","src","thumb","F","price","bed","bdr","bath","bth","ResultGrid","results","filteredResults","bCanScroll","setbCanScroll","containerRef","scrollTo","offset","curScroll","scrollTop","offsetHeight","setTimeout","number","num","parseInt","toString","bdrms","isSearch","arguments","undefined","baths","sqft","sqfts","MapDisplay","g_fullResults","fullResults","g_filteredResults","g_setFullResults","setFullResults","g_setListingBeingViewed","bFailedToLoadMap","setbFailedToLoadMap","setMap","bNewHouseCoordsNeeded","setbNewHouseCoordsNeeded","markers","setMarkers","url","document","getElementById","innerHTML","newMap","L","setView","geometry","lat","lng","tileLayer","maxZoom","attribution","addTo","hasOwnProperty","mappedHouses","house","coords","containerPointToLayerPoint","x","Math","floor","random","getSize","y","point","getRandomCoordinate","layerPointToLatLng","objectSpread","forEach","m","marker","removeFrom","i","bindPopup","on","openPopup","NumberDropdown","min","max","stepSize","onSelect","valueFormatter","options","largestVal","push","ButtonWithDropdown","g_onSelected","setValue","showDropdown","setShowDropdown","activeDropdown","setActiveDropdown","toggleList","newVal","SearchHeader","g_setMinPrice","setMinPrice","g_setMaxPrice","setMaxPrice","g_setMinBdr","setMinBdr","g_setMinBath","setMinBath","g_setMinSqft","setMinSqft","g_togglebHasGarage","togglebHasGarage","font-size","htmlFor","DetailsModul","listingBeingViewed","garage","sqf","MapSearch","g_searchFilters","searchFilters","g_setFilteredResults","setFilteredResults","g_listingBeingViewed","getRandomByRange","randomizeHouse","addr","imgs","randomizedHouses","houses","doesGarageMatch","bHasGarage","minSqft","minBdr","minBath","minPrice","maxPrice","model","action","checked","bGoTo","store","createStore","Boolean","window","location","hostname","ReactDOM","render","easy_peasy_esm","path","exact","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.91712d0f.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function AutoCompleteBox({ suggestions, clickHandler }) {\r\n  return (\r\n    <ul className=\"autoCompleteBox\">\r\n      {suggestions.map((suggestion, index) => {\r\n        return (\r\n          <li\r\n            className=\"suggestion\"\r\n            key={index}\r\n            index={index}\r\n            onClick={() => clickHandler(index)}\r\n          >\r\n            {suggestion.city} , {suggestion.state}\r\n          </li>\r\n        );\r\n      })}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport Axios from \"axios\";\r\n\r\nimport AutoCompleteBox from \"./AutoCompleteBox\";\r\n\r\nexport default function CitySearchBox() {\r\n  const [suggestions, setSuggestions] = useState([]);\r\n  const [selectedCity, setSelectedCity] = useState(null);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [cityList, setCityList] = useState(null);\r\n  const g_setToMapSearch = useStoreActions(actions => actions.setToMapSearch);\r\n  const g_selectedCity = useStoreState(state => state.selectedCity);\r\n  const g_SetSelectedCity = useStoreActions(actions => actions.setSelectedCity);\r\n\r\n  const formatCityObj = obj => {\r\n    return obj.city + \" , \" + obj.state;\r\n  };\r\n  useEffect(() => {\r\n    if (g_selectedCity.city !== \"\") {\r\n      setSearchTerm(formatCityObj(g_selectedCity));\r\n    }\r\n    const CancelToken = Axios.CancelToken;\r\n    const source = CancelToken.source();\r\n    Axios.get(\"sorted_usaCities.json\", { cancelToken: source.token })\r\n      .then(res => setCityList(res.data))\r\n      .catch(error => console.log(error));\r\n\r\n    return () => {\r\n      source.cancel(\"CitySearchBox component unmounted\");\r\n    };\r\n  }, []);\r\n\r\n  const findCityByTerm = term => {\r\n    term = term.toUpperCase();\r\n    let termLen = term.length;\r\n    let firstL = term[0];\r\n    return (\r\n      cityList[firstL].filter(\r\n        entry => entry.city.substring(0, termLen).toUpperCase() === term\r\n      ) || []\r\n    );\r\n  };\r\n\r\n  const onInputChange = e => {\r\n    let term = e.target.value;\r\n    if (selectedCity && formatCityObj(selectedCity) !== term) {\r\n      setSelectedCity(null);\r\n    }\r\n    setSearchTerm(term);\r\n    if (cityList && term.match(/^[a-zA-Z ]+$/)) {\r\n      setSuggestions(findCityByTerm(term));\r\n    } else {\r\n      setSuggestions([]);\r\n    }\r\n  };\r\n\r\n  const inputRef = React.createRef();\r\n  const onSuggestionClicked = index => {\r\n    let selection = suggestions[index];\r\n    setSelectedCity(selection);\r\n    setSearchTerm(formatCityObj(selection));\r\n    setSuggestions([]);\r\n    inputRef.current.focus();\r\n  };\r\n  const focusHandler = () => {\r\n    inputRef.current.select();\r\n  };\r\n  const listenForSubmit = e => {\r\n    if (e.key === \"Enter\" && searchTerm) {\r\n      let bestMatch = selectedCity;\r\n      if (!bestMatch) {\r\n        const matchingCities = findCityByTerm(searchTerm);\r\n        if (matchingCities.length > 0) {\r\n          bestMatch = matchingCities[0];\r\n        } else {\r\n          alert(\"no matching cities found\");\r\n        }\r\n      }\r\n      if (bestMatch) {\r\n        g_SetSelectedCity(bestMatch);\r\n        g_setToMapSearch(true);\r\n      }\r\n    }\r\n  };\r\n  return (\r\n    <>\r\n      {suggestions.length > 0 && (\r\n        <div\r\n          className=\"clickCapture\"\r\n          onClick={() => {\r\n            setSuggestions([]);\r\n          }}\r\n        ></div>\r\n      )}\r\n      <div className=\"citySearchBox\">\r\n        <div style={{ display: \"inline-block\", position: \"relative\" }}>\r\n          <input\r\n            type=\"text\"\r\n            size=\"40\"\r\n            name=\"cityTerm\"\r\n            placeholder=\"listings in:\"\r\n            onChange={onInputChange}\r\n            onKeyPress={listenForSubmit}\r\n            onFocus={focusHandler}\r\n            onClick={focusHandler}\r\n            value={searchTerm}\r\n            ref={inputRef}\r\n          />\r\n\r\n          {suggestions.length > 0 && (\r\n            <AutoCompleteBox\r\n              clickHandler={onSuggestionClicked}\r\n              suggestions={suggestions}\r\n            />\r\n          )}\r\n        </div>\r\n        <button\r\n          name=\"citySearchSubmit\"\r\n          onClick={() => listenForSubmit({ key: \"Enter\" })}\r\n        >\r\n          Search\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CitySearchBox from \"./CitySearchBox\";\r\nimport { useStoreState } from \"easy-peasy\";\r\n\r\nconst NAME_STYLE = {\r\n  color: \"black\"\r\n};\r\nconst NAV_STYLE = {\r\n  color: \"black\"\r\n};\r\n\r\nexport default function Header() {\r\n  const g_selectedCity = useStoreState(state => state.selectedCity);\r\n  const [bShowSearch, setbShowSearch] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (g_selectedCity.city !== \"\") {\r\n      setbShowSearch(true);\r\n    } else {\r\n      setbShowSearch(false);\r\n    }\r\n  }, [g_selectedCity]);\r\n\r\n  return (\r\n    <div className=\"header\">\r\n      <Link to=\"/\" style={NAME_STYLE}>\r\n        <p>Fake-estate</p>\r\n      </Link>\r\n      {bShowSearch && <CitySearchBox />}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\n\r\nimport CitySearchBox from \"../layout/CitySearchBox\";\r\n\r\nexport default function Home() {\r\n  const g_toMapSearch = useStoreState(state => state.toMapSearch);\r\n  const g_setToMapSearch = useStoreActions(actions => actions.setToMapSearch);\r\n  const g_resetSelectedCity = useStoreActions(\r\n    actions => actions.resetSelectedCity\r\n  );\r\n  const [toMapSearch, setToMapSearch] = useState(false);\r\n\r\n  useEffect(() => {\r\n    g_resetSelectedCity();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (g_toMapSearch) {\r\n      g_setToMapSearch(false);\r\n      setToMapSearch(true);\r\n    }\r\n  }, [g_toMapSearch]);\r\n\r\n  return toMapSearch ? (\r\n    <Redirect to=\"/mapSearch\" />\r\n  ) : (\r\n    <div className=\"page homePage\">\r\n      <div className=\"homePageContent\">\r\n        <h1> Find Local Homes</h1>\r\n        <CitySearchBox />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","export class Formatters {\r\n  static number = num => {\r\n    if (parseInt(num) > 0) {\r\n      num = num.toString();\r\n      let index = num.length - 3;\r\n      while (index > 0) {\r\n        num = num.substring(0, index) + \",\" + num.substring(index);\r\n        index -= 3;\r\n      }\r\n    }\r\n    return num;\r\n  };\r\n  static price = price => {\r\n    if (parseInt(price) > 0) {\r\n      price = this.number(price);\r\n      price = \"$\" + price;\r\n    }\r\n    return price;\r\n  };\r\n  static bed = (bdrms, isSearch = false) => {\r\n    if (parseInt(bdrms) >= 0) {\r\n      if (isSearch) {\r\n        bdrms += \"+\";\r\n      }\r\n      bdrms += \" Beds\";\r\n    }\r\n    return bdrms;\r\n  };\r\n  static bath = (baths, isSearch = false) => {\r\n    if (parseInt(baths) > 0) {\r\n      if (isSearch) {\r\n        baths += \"+\";\r\n      }\r\n      baths += \" Baths\";\r\n    }\r\n    return baths;\r\n  };\r\n  static sqft = (sqfts, isSearch = false) => {\r\n    if (parseInt(sqfts) > 0) {\r\n      sqfts = this.number(sqfts);\r\n      if (isSearch) {\r\n        sqfts += \"+\";\r\n      }\r\n      sqfts += \" sq.ft.\";\r\n    }\r\n    return sqfts;\r\n  };\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Formatters as F } from \"../Formatters\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\n\r\nexport default function ResultThumbnail({ listing, id, focusHandler }) {\r\n  const g_setSelectedHouseId = useStoreActions(\r\n    actions => actions.setSelectedHouseId\r\n  );\r\n  const g_selectedHouseId = useStoreState(state => state.selectedHouseId);\r\n  const [bSelected, setbSelected] = useState(false);\r\n  const ref = React.createRef();\r\n  const clickHandler = useStoreActions(\r\n    actions => actions.setListingBeingViewed\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (listing.id === g_selectedHouseId) {\r\n      setbSelected(true);\r\n      focusHandler(ref.current.offsetTop);\r\n    } else {\r\n      setbSelected(false);\r\n    }\r\n  }, [g_selectedHouseId]);\r\n  return (\r\n    <div\r\n      className={(bSelected ? \"selectedThumb \" : \"\") + \"resultThumbnail\"}\r\n      onMouseOver={() => {\r\n        g_setSelectedHouseId(listing.id);\r\n      }}\r\n      onClick={() => {\r\n        clickHandler(listing.id);\r\n      }}\r\n      ref={ref}\r\n    >\r\n      <img src={listing.thumb} />\r\n      <div>\r\n        <span className=\"thumb_price\">{F.price(listing.price)}</span>\r\n        <span className=\"thumb_bedbath\">\r\n          {F.bed(listing.bdr) + \" / \" + F.bath(listing.bth)}\r\n        </span>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from \"react\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport ResultThumbnail from \"./ResultThumbnail\";\r\n\r\nexport default function ResultGrid() {\r\n  const results = useStoreState(state => state.filteredResults);\r\n  const [bCanScroll, setbCanScroll] = useState(true);\r\n  const containerRef = React.createRef();\r\n\r\n  const scrollTo = offset => {\r\n    let curScroll = containerRef.current.scrollTop;\r\n    let height = containerRef.current.offsetHeight;\r\n    if (offset > curScroll + height || (offset < curScroll && bCanScroll)) {\r\n      containerRef.current.scrollTop = offset - 5;\r\n      setbCanScroll(false);\r\n      setTimeout(() => {\r\n        setbCanScroll(true);\r\n      }, 300);\r\n    }\r\n  };\r\n  return (\r\n    <div className=\"gridContainer\" ref={containerRef}>\r\n      <div className=\"resultGrid\">\r\n        {results.length > 0 &&\r\n          results.map((listing, id) => (\r\n            <ResultThumbnail\r\n              key={id}\r\n              listing={listing}\r\n              id={id}\r\n              focusHandler={scrollTo}\r\n            />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport Axios from \"axios\";\r\nimport L from \"leaflet\";\r\nimport { Formatters as F } from \"../Formatters\";\r\n\r\nexport default function MapDisplay() {\r\n  const g_selectedCity = useStoreState(state => state.selectedCity);\r\n  const g_fullResults = useStoreState(state => state.fullResults);\r\n  const g_filteredResults = useStoreState(state => state.filteredResults);\r\n  const g_setFullResults = useStoreActions(actions => actions.setFullResults);\r\n  const g_selectedHouseId = useStoreState(state => state.selectedHouseId);\r\n  const g_setSelectedHouseId = useStoreActions(\r\n    actions => actions.setSelectedHouseId\r\n  );\r\n  const g_setListingBeingViewed = useStoreActions(\r\n    actions => actions.setListingBeingViewed\r\n  );\r\n  const [bFailedToLoadMap, setbFailedToLoadMap] = useState(false);\r\n  const [map, setMap] = useState(null);\r\n  const [bNewHouseCoordsNeeded, setbNewHouseCoordsNeeded] = useState(false);\r\n  const [markers, setMarkers] = useState([]);\r\n\r\n  const getRandomCoordinate = () => {\r\n    if (map) {\r\n      let x = Math.floor(Math.random() * Math.floor(map.getSize().x));\r\n      let y = Math.floor(Math.random() * Math.floor(map.getSize().y));\r\n      return L.point(x, y);\r\n    }\r\n  };\r\n  const markerHoverHandler = id => {\r\n    g_setSelectedHouseId(id);\r\n  };\r\n  useEffect(() => {\r\n    const CancelToken = Axios.CancelToken;\r\n    const source = CancelToken.source();\r\n    const url =\r\n      \"https://api.opencagedata.com/geocode/v1/json?key=2573852ff477475fa7c0da745eeea496&q=\" +\r\n      g_selectedCity.city +\r\n      \"+\" +\r\n      g_selectedCity.state;\r\n    Axios.get(url)\r\n      .catch(error => {\r\n        console.log(error);\r\n      })\r\n      .then(res => {\r\n        try {\r\n          document.getElementById(\"mapDisplay\").innerHTML =\r\n            \"<div id='map' style='width: 100%; height: 100%;'></div>\";\r\n          let newMap = L.map(\"map\").setView(\r\n            [\r\n              res.data.results[0].geometry.lat,\r\n              res.data.results[0].geometry.lng\r\n            ],\r\n            13\r\n          );\r\n          let mapTiles = L.tileLayer(\r\n            \"https://tiles.wmflabs.org/hikebike/{z}/{x}/{y}.png\",\r\n            {\r\n              maxZoom: 19,\r\n              attribution:\r\n                '&copy; <a href=\"https://www.openstreetmap.org/copyright\">OpenStreetMap</a> contributors'\r\n            }\r\n          ).addTo(newMap);\r\n          setMap(newMap);\r\n          setbNewHouseCoordsNeeded(true);\r\n        } catch (e) {\r\n          console.log(\"could not retrieve map coordinates:\" + e);\r\n          setbFailedToLoadMap(true);\r\n        }\r\n      });\r\n    return () => {\r\n      source.cancel(\"MapDisplay component unmounted\");\r\n    };\r\n  }, [g_selectedCity]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      g_fullResults.length > 0 &&\r\n      !g_fullResults[0].hasOwnProperty(\"coords\") &&\r\n      map\r\n    ) {\r\n      let mappedHouses = g_fullResults.map(house => {\r\n        let coords = map.containerPointToLayerPoint(getRandomCoordinate());\r\n        coords = map.layerPointToLatLng(coords);\r\n        return {\r\n          ...house,\r\n          coords\r\n        };\r\n      });\r\n      g_setFullResults(mappedHouses);\r\n    }\r\n    setbNewHouseCoordsNeeded(false);\r\n  }, [bNewHouseCoordsNeeded]);\r\n\r\n  useEffect(() => {\r\n    if (g_filteredResults.length > 0 && map) {\r\n      markers.forEach(m => {\r\n        if (m) {\r\n          m.marker.removeFrom(map);\r\n        }\r\n      });\r\n      setMarkers([]);\r\n      setMarkers(\r\n        g_filteredResults.map((house, i) => {\r\n          if (house.coords) {\r\n            let m = L.marker(house.coords);\r\n            m.addTo(map);\r\n            m.bindPopup(F.price(house.price));\r\n            m.on(\"mouseover\", () => {\r\n              markerHoverHandler(house.id);\r\n            });\r\n            m.on(\"click\", () => {\r\n              g_setListingBeingViewed(house.id);\r\n            });\r\n            return { marker: m, id: house.id };\r\n          }\r\n        })\r\n      );\r\n    } else if (g_filteredResults.length === 0) {\r\n      markers.forEach(m => {\r\n        m.marker.removeFrom(map);\r\n      });\r\n      setMarkers([]);\r\n    }\r\n  }, [g_filteredResults]);\r\n\r\n  useEffect(() => {\r\n    markers.forEach(m => {\r\n      if (m.id === g_selectedHouseId) {\r\n        m.marker.openPopup();\r\n        return;\r\n      }\r\n    });\r\n  }, [g_selectedHouseId]);\r\n\r\n  if (bFailedToLoadMap) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  return (\r\n    <div id=\"mapDisplay\">\r\n      <div>loading...</div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function NumberDropdown({\r\n  min,\r\n  max,\r\n  stepSize,\r\n  onSelect,\r\n  valueFormatter\r\n}) {\r\n  let options = [];\r\n  let largestVal = min;\r\n  while (largestVal <= max) {\r\n    options.push(largestVal);\r\n    largestVal += stepSize;\r\n  }\r\n  if (options[options.length - 1] !== max) {\r\n    options.push(max);\r\n  }\r\n\r\n  return (\r\n    <ul className=\"autoCompleteBox\">\r\n      {options.map((value, id) => (\r\n        <li className=\"suggestion\" key={id} onClick={() => onSelect(value)}>\r\n          {valueFormatter(value, true)}\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useState, useEffect } from \"react\";\r\nimport NumberDropdown from \"./NumberDropdown\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nexport default function ButtonWithDropdown({\r\n  placeholder,\r\n  min,\r\n  max,\r\n  stepSize,\r\n  g_onSelected,\r\n  valueFormatter,\r\n  id\r\n}) {\r\n  const [value, setValue] = useState(placeholder);\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const activeDropdown = useStoreState(state => state.activeDropdown);\r\n  const setActiveDropdown = useStoreActions(\r\n    actions => actions.setActiveDropdown\r\n  );\r\n  const onSelected = newVal => {\r\n    setValue(newVal);\r\n    g_onSelected(newVal);\r\n    toggleList();\r\n  };\r\n  const toggleList = () => {\r\n    if (!showDropdown) {\r\n      setActiveDropdown(id);\r\n    } else if (activeDropdown === id) {\r\n      setActiveDropdown(null);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (activeDropdown === id) {\r\n      setShowDropdown(true);\r\n    } else {\r\n      setShowDropdown(false);\r\n    }\r\n  }, [activeDropdown]);\r\n\r\n  return (\r\n    <div className=\"searchInputContainer\">\r\n      <div className=\"dropdownContainer\">\r\n        <button onClick={toggleList}>\r\n          <p>{valueFormatter(value, true)}</p>\r\n          <span> &#x2228; </span>\r\n        </button>\r\n        {showDropdown && (\r\n          <div className=\"clickCapture\" onClick={toggleList}></div>\r\n        )}\r\n        {showDropdown && (\r\n          <NumberDropdown\r\n            min={min}\r\n            max={max}\r\n            stepSize={stepSize}\r\n            onSelect={onSelected}\r\n            valueFormatter={valueFormatter}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { useStoreActions, useStoreState } from \"easy-peasy\";\r\nimport ButtonWithDropdown from \"./ButtonWithDropdown\";\r\nimport { Formatters as F } from \"../Formatters\";\r\n\r\nexport default function SearchHeader() {\r\n  const g_setMinPrice = useStoreActions(actions => actions.setMinPrice);\r\n  const g_setMaxPrice = useStoreActions(actions => actions.setMaxPrice);\r\n  const g_setMinBdr = useStoreActions(actions => actions.setMinBdr);\r\n  const g_setMinBath = useStoreActions(actions => actions.setMinBath);\r\n  const g_setMinSqft = useStoreActions(actions => actions.setMinSqft);\r\n  const g_togglebHasGarage = useStoreActions(\r\n    actions => actions.togglebHasGarage\r\n  );\r\n  const g_filteredResults = useStoreState(state => state.filteredResults);\r\n\r\n  return (\r\n    <div className=\"searchHeader\">\r\n      <ButtonWithDropdown\r\n        placeholder=\"Min Price\"\r\n        min={20000}\r\n        max={1000000}\r\n        stepSize={50000}\r\n        g_onSelected={g_setMinPrice}\r\n        valueFormatter={F.price}\r\n      />\r\n      {\" <=> \"}\r\n      <ButtonWithDropdown\r\n        placeholder=\"Max Price\"\r\n        min={20000}\r\n        max={1000000}\r\n        stepSize={50000}\r\n        g_onSelected={g_setMaxPrice}\r\n        valueFormatter={F.price}\r\n        id={0}\r\n      />\r\n      <ButtonWithDropdown\r\n        placeholder=\"Beds\"\r\n        min={0}\r\n        max={7}\r\n        stepSize={1}\r\n        g_onSelected={g_setMinBdr}\r\n        valueFormatter={F.bed}\r\n        id={1}\r\n      />\r\n      <ButtonWithDropdown\r\n        placeholder=\"Baths\"\r\n        min={0}\r\n        max={7}\r\n        stepSize={1}\r\n        g_onSelected={g_setMinBath}\r\n        valueFormatter={F.bath}\r\n        id={2}\r\n      />\r\n      <ButtonWithDropdown\r\n        placeholder=\"Sq.Ft.\"\r\n        min={300}\r\n        max={12000}\r\n        stepSize={300}\r\n        g_onSelected={g_setMinSqft}\r\n        valueFormatter={F.sqft}\r\n        id={3}\r\n      />\r\n      <span style={{ color: \"white\", \"font-size\": \"1.2em\" }}>Garage: </span>\r\n      <div className=\"garageSelector\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"hasGarage\"\r\n          name=\"hasGarage\"\r\n          onClick={g_togglebHasGarage}\r\n        />\r\n        <label htmlFor=\"hasGarage\"></label>\r\n      </div>\r\n      <p className=\"resultsCount\">\r\n        {g_filteredResults ? g_filteredResults.length : 0} Results Found\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { Formatters as F } from \"../Formatters\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\n\r\nexport default function DetailsModul() {\r\n  const listing = useStoreState(state => state.listingBeingViewed);\r\n  const setListingBeingViewed = useStoreActions(\r\n    actions => actions.setListingBeingViewed\r\n  );\r\n\r\n  const displayListingSpecs = () => {\r\n    return (\r\n      F.price(listing.price) +\r\n      \"  |  \" +\r\n      F.bed(listing.bdr) +\r\n      \"/\" +\r\n      F.bath(listing.bth) +\r\n      \"  |  has garage: \" +\r\n      (listing.garage ? \"Yes\" : \"No\") +\r\n      \" | \" +\r\n      F.sqft(listing.sqf)\r\n    );\r\n  };\r\n  const hideListing = () => {\r\n    setListingBeingViewed(null);\r\n    console.log(\"hide modul\");\r\n  };\r\n  return (\r\n    <div className=\"detailsModul\">\r\n      <div className=\"clickCapture\" onClick={hideListing}></div>\r\n      <div className=\"detailsContent\">\r\n        <div className=\"detailsGallery\">\r\n          <img src={listing.thumb} />\r\n        </div>\r\n        <div className=\"detailsInfo\">\r\n          <div className=\"infoSpecs\">{displayListingSpecs()}</div>\r\n          <div className=\"infoDescription\">\r\n            This is where listing details would go if this were a real listing.\r\n            <br />\r\n            All stock images are from unsplash.com\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from \"react\";\r\nimport ResultGrid from \"../layout/ResultGrid\";\r\nimport MapDisplay from \"../layout/MapDisplay\";\r\nimport { useStoreState, useStoreActions } from \"easy-peasy\";\r\nimport Axios from \"axios\";\r\nimport SearchHeader from \"../layout/SearchHeader\";\r\nimport DetailsModul from \"../layout/DetailsModul\";\r\n\r\nexport default function MapSearch() {\r\n  const g_searchFilters = useStoreState(state => state.searchFilters);\r\n  const g_selectedCity = useStoreState(state => state.selectedCity);\r\n  const g_setFilteredResults = useStoreActions(\r\n    actions => actions.setFilteredResults\r\n  );\r\n  const g_setFullResults = useStoreActions(actions => actions.setFullResults);\r\n  const g_fullResults = useStoreState(state => state.fullResults);\r\n  const g_listingBeingViewed = useStoreState(state => state.listingBeingViewed);\r\n  const getRandomByRange = (min, max) => {\r\n    return Math.max(Math.floor(Math.random() * max), min);\r\n  };\r\n  const randomizeHouse = house => {\r\n    let sqf = getRandomByRange(300, 10000);\r\n    let price = getRandomByRange(80000, 999999);\r\n    let bdr = getRandomByRange(0, 7);\r\n    let bth = getRandomByRange(1, 7);\r\n    let garage = Math.random() > 0.5;\r\n\r\n    return {\r\n      addr: house.addr,\r\n      imgs: house.imgs,\r\n      thumb: house.thumb,\r\n      sqf,\r\n      price,\r\n      bdr,\r\n      bth,\r\n      garage\r\n    };\r\n  };\r\n  useEffect(() => {\r\n    if (g_fullResults.length <= 0) {\r\n      Axios.get(\"placeholderHouses.json\")\r\n        .catch(error => console.log(error))\r\n        .then(res => {\r\n          let randomizedHouses = res.data.houses.map(house => {\r\n            return randomizeHouse(house);\r\n          });\r\n          g_setFullResults(randomizedHouses);\r\n          g_setFilteredResults(randomizedHouses);\r\n        });\r\n    } else {\r\n      let randomizedHouses = g_fullResults.map(house => {\r\n        return randomizeHouse(house);\r\n      });\r\n      g_setFullResults(randomizedHouses);\r\n      g_setFilteredResults(randomizedHouses);\r\n    }\r\n  }, [g_selectedCity]);\r\n\r\n  useEffect(() => {\r\n    if (g_fullResults.length > 0) {\r\n      const filteredResults = g_fullResults.filter(house => {\r\n        const doesGarageMatch =\r\n          !g_searchFilters.bHasGarage ||\r\n          (g_searchFilters.bHasGarage && house.garage);\r\n\r\n        return (\r\n          house.sqf >= g_searchFilters.minSqft &&\r\n          house.bdr >= g_searchFilters.minBdr &&\r\n          house.bth >= g_searchFilters.minBath &&\r\n          house.price >= g_searchFilters.minPrice &&\r\n          house.price <= g_searchFilters.maxPrice &&\r\n          doesGarageMatch\r\n        );\r\n      });\r\n      g_setFilteredResults(\r\n        filteredResults.map((house, i) => ({ ...house, id: i }))\r\n      );\r\n    }\r\n  }, [g_searchFilters, g_fullResults]);\r\n  return (\r\n    <div className=\"page\">\r\n      {g_listingBeingViewed && <DetailsModul />}\r\n      <SearchHeader />\r\n      <div className=\"mapSearchResult\">\r\n        <ResultGrid />\r\n        <MapDisplay />\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import { action } from \"easy-peasy\";\r\nconst model = {\r\n  searchFilters: {\r\n    minPrice: 0,\r\n    maxPrice: 999999999,\r\n    minBdr: 0,\r\n    minBath: 0,\r\n    minSqft: 0,\r\n    bHasGarage: false\r\n  },\r\n  setMinPrice: action((state, minPrice) => {\r\n    state.searchFilters.minPrice = minPrice;\r\n  }),\r\n  setMaxPrice: action((state, maxPrice) => {\r\n    state.searchFilters.maxPrice = maxPrice;\r\n  }),\r\n  setMinBdr: action((state, minBdr) => {\r\n    state.searchFilters.minBdr = minBdr;\r\n  }),\r\n  setMinBath: action((state, minBath) => {\r\n    state.searchFilters.minBath = minBath;\r\n  }),\r\n  setMinSqft: action((state, minSqft) => {\r\n    state.searchFilters.minSqft = minSqft;\r\n  }),\r\n  togglebHasGarage: action((state, e) => {\r\n    state.searchFilters.bHasGarage = e.target.checked;\r\n  }),\r\n  selectedCity: { city: \"\", state: \"\" },\r\n  setSelectedCity: action((state, obj) => {\r\n    state.selectedCity = obj;\r\n  }),\r\n  resetSelectedCity: action(state => {\r\n    state.selectedCity = { city: \"\", state: \"\" };\r\n  }),\r\n  fullResults: [],\r\n  setFullResults: action((state, res) => {\r\n    state.fullResults = res;\r\n  }),\r\n  filteredResults: [],\r\n  setFilteredResults: action((state, results) => {\r\n    state.filteredResults = results;\r\n  }),\r\n  activeDropdown: null,\r\n  setActiveDropdown: action((state, id) => {\r\n    state.activeDropdown = id;\r\n  }),\r\n  selectedHouseId: null,\r\n  setSelectedHouseId: action((state, id) => {\r\n    state.selectedHouseId = id;\r\n  }),\r\n  listingBeingViewed: null,\r\n  setListingBeingViewed: action((state, id) => {\r\n    state.listingBeingViewed = state.fullResults[id];\r\n  }),\r\n  toMapSearch: false,\r\n  setToMapSearch: action((state, bGoTo) => {\r\n    state.toMapSearch = bGoTo;\r\n  })\r\n};\r\n\r\nexport default model;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { StoreProvider, createStore } from \"easy-peasy\";\r\nimport \"./App.css\";\r\n\r\nimport Header from \"./components/layout/Header\";\r\nimport Home from \"./components/pages/Home\";\r\nimport MapSearch from \"./components/pages/MapSearch\";\r\nimport model from \"./SearchModel\";\r\n\r\nconst store = createStore(model);\r\n\r\nexport default function App() {\r\n  return (\r\n    <StoreProvider store={store}>\r\n      <Router>\r\n        <div className=\"App\">\r\n          <Header />\r\n          <Switch>\r\n            <Route path=\"/\" exact>\r\n              <Home />\r\n            </Route>\r\n            <Route path=\"/mapSearch\">\r\n              <MapSearch />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Router>\r\n    </StoreProvider>\r\n  );\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}